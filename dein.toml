# dein.toml
# Let dein manage dein
# Required:
[[plugins]]
repo = 'Shougo/dein.vim'


# plugins
[[plugins]]
# Context filetype library for Vim script
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deol.nvim'

[[plugins]]
# Fileopen history enable
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
# More usable fileopen
repo = 'Shougo/unite.vim'
hook_add = '''
" http://blog.remora.cx/2010/12/vim-ref-with-unite.html
" Start on insert mode
let g:unite_enable_start_insert=1
" List of buffer
noremap <C-P> :Unite buffer<CR>
" List of file
noremap <C-N> :Unite -buffer-name=file file<CR>
" List of recentry used file
noremap <C-Z> :Unite file_mru<CR>
" Sources as current directory
noremap :uff :<C-u>UniteWithBufferDir file -buffer-name=file<CR>
" Window separated open
au FileType unite nnoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
au FileType unite inoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
" Window vertically separated open
au FileType unite nnoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
au FileType unite inoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
" End on <ESC><ESC>
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
'''

[[plugins]]
# PEP8
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
# Visualize unnecessary spaces on end of line
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
# toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'flazz/vim-colorschemes'

[[plugins]]
# Auto complete closing bracket
repo = 'jiangmiao/auto-pairs'

[[plugins]]
# Guide indent by color
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
" Auto enable on launching vim
colorscheme default
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd guibg=darkgrey ctermbg=252
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=darkgrey ctermbg=251
" only first
let g:indent_guides_guide_size = 1
'''

[[plugins]]
# Tree fileopen
repo = 'scrooloose/nerdtree'

# [[plugins]]
# # enable color scheme 'molokai'
# repo = 'tomasr/molokai'
# hook_add = '''
# colorscheme molokai
# highlight Normal ctermbg=none
# '''

[[plugins]]
# Easy toggle comment on/off
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
" Show QuickFix List after grep-search
autocmd QuickFixCmdPost *grep* cwindow
" Show current Git branch on status line
set statusline+=%{fugitive#statusline()}
'''

[[plugins]]
# Change ' and "
repo = 'tpope/vim-surround'

[[plugins]]
# fold Python
repo = 'tweekmonster/braceless.vim'
hook_add = '''
autocmd FileType python BracelessEnable +indent +fold
'''

[[plugins]]
# Interpretable ANSI escape color code
repo = 'vim-scripts/AnsiEsc.vim'

# [[plugins]]
# # color scheme
# repo = 'w0ng/vim-hybrid'
# hook_add = '''
# set background=dark
# " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
# " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
# au MyAutoCmd VimEnter * nested colorscheme hybrid
# '''


# plugins with depends
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
